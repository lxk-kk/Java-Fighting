【跨域】
1、同源策略：
	同源策略是一种约定，它是浏览器最核心也最基本的安全功能，如果缺少了同源策略，浏览器很容易受到XSS、CSFR等攻击。
	所谓同源是指"协议+域名+端口"三者相同，即便两个不同的域名指向同一个ip地址，也非同源。
	
2、跨域：
	在网页的请求里，也就是客户访问页面的网域里面，发送的任何ajax请求，都是必须在同域里，如果跨域，就需要服务器端同意客户端跨域请求，这样客户端才能接收到返回内容。
	允许跨域的头：Access-Control-Allow-Origin
	
	不允许跨域，实际上是浏览器提供的功能，在curl中就不会出现跨域的问题
	
	其实：不管头部是否设置了允许请求跨域，浏览器都会发送请求，并且接收服务端的返回内容。因为发起请求的时候，它并不知道这个请求是不是跨域的。
		但是当浏览器解析响应头部信息的时，发现Access-Control-Allow-Origin并没有设置为允许本域访问服务器端，则这个请求是不被允许的，浏览器会拦截，忽略响应内容，并在控制台中报错提示。
	解决：
	（1）在服务端设置头 Access-Control-Allow-Origin:* 	表示：任何服务任何域名的页面都可以访问这个服务。不安全
	（2）将头Access-Control-Allow-Origin改为一个特定ip或者域名。表示：只有这个ip或域名下的请求可以访问本服务端。
		例如：将器改为127.0.0.1:port，
			注意：
				这样如果通过localhost访问的页面对服务端发起请求，那依旧是会出现跨域问题。
				因为浏览器解析头部信息的时候，发现响应的头中设置的允许的客户端域为127.0.0.1:port，并不是localhost，它并不知道localhost被映射成了127.0.0.1:port，它会认为这两个不是同域，所以跨域
			如果使用127.0.0.1对服务器发起请求进行，则不会出现跨域

3、浏览器在link标签，image标签，script标签，这些在标签上写路径加载请求时是允许跨域的，并不在乎服务器是否设置了跨域的头。
	<img src=XXX> 
	<link href=XXX> 
	<script src=XXX> 	
	
4、jsonp实现跨域的原理：
	在script标签中加载了一个链接，这个链接访问了服务器的请求并且返回了内容。
	由于服务器返回的内容是可控的，所以可以在服务器的返回内容中写一段可执行的js代码。
	然后再调用 jsonp发起请求之前为我们设置的一些内容，以此来达到我们想要达到的目的。

	并不是所有请求都可以设置这个头来允许跨域请求。

5、浏览器跨域请求的其他限制：
	（1）默认允许的方法：GET、HEAD、POST（其他方法都是默认不允许的，这些方法发送请求时，浏览器会发送一个预请求去验证）
	（2）允许的Content-Type：text/plain、multipart/form-data、application/x-www-form-urlencoded，这是在html的form表单中可以设置的数据类型
		除了这三种Content-Type之外的其他的Content-Type发送请求前，也是需要预请求验证之后才能进行发送。
	（3）其他限制
		限制1-请求头的限制：自定义的请求头是默认不允许的，需要进行预验证
		限制2-XMLHttpRequestUpload对象均没有注册任何事件监听器（少用）
		限制3-请求中没有使用ReadableStream对象（少用）

6、CORS预请求：NOPTIONS：用来查询针对请求URI指定的资源支持的方法
	如果请求中包含了上述默认的允许的方法和Content-Type之外的请求方法或Content-Type，则浏览器会发送预请求确定这些非默认的请求方式是否被允许。
	预请求的是在正式请求之前发送的。
	预请求发送的是一个OPTIONS方法的请求，验证服务端允许的头部部信息中是否包含了所有客户端正式请求中所有非默认的请求方式。
	
7、服务端如何允许非默认的请求方式呢？
	（1）允许自定义请求头'xxx-xxx'						服务端设置：Access-Control-Allow-Headers:xxx-xxx
	（2）允许非默认的请求方法：DELETE,PUT				服务端设置：Access-Control-Allow-Methods:PUT,DELETE
	（3）允许非默认的Content-Type：application/json		服务端设置：Access-Control-Allow-Headers:Content-Type ：表示允许头部为Content-Type的内容访问
	
	加餐：可以在服务端设置预请求效果存活的时长。
		服务端设置：Access-Control-Max-Age:1000			表示如果预请求通过，则1000s内，不需要发送预请求了，可以直接请求
	
	
8、当前端使用 POST 方法时，Jquery 以及axios 等封装 Ajax 的库会默认数据为Content-Type: application/x-www-form-urlencoded表单类型。
	如果数据为json类型，则会将数据处理为键值对。所以当不设置Content-Type的时候，不会因为数据类型触发预请求。
	